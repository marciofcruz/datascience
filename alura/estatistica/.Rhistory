2 + 2
R.version()
r.version()
R.version
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
StartDate < as.Date("2020/2/28")
StartDate <- as.Date("2020/2/28")
StopDate < as.Date("2020/3/1")
StopDate <- as.Date("2020/3/1")
StopDate - StartDate
arrange(unique(select(dados, Anos.de.Estudo)), Anos.de.Estudo)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variÃ¡vel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
library("dplyr")
# Importando dados --------------------------------------------------------
dados <- read.csv("dados.csv")
sessionInfo()
head(dados, 10)
arrange(unique(select(dados, Anos.de.Estudo)), Anos.de.Estudo)
unique(select(dados, Anos.de.Estudo))
arrange(unique(select(dados, Anos.de.Estudo)), Anos.de.Estudo)
typeof(arrange(unique(select(dados, Anos.de.Estudo)), Anos.de.Estudo))
arrange(unique(select(dados, Anos.de.Estudo)), Anos.de.Estudo)
arrange(unique(select(dados, UF)), UF)
arrange(unique(select(dados, Cor)), Cor)
# Quantitativas discretas
sprintf('a','b')
# Quantitativas discretas
sprintf('De %s até %s anos', min(dados$Idade), max(dados$Idade))
library("glue")
library("dplyr")
library("glue")
glue("De {min(dados$Idade)} até {} anos", max(dados$Idade))
glue("De {min(dados$Idade)} até {max(dados$Idade)} anos")
glue("De {min(dados$Altura)} até {max(dados$Altura)} metros")
table(dados$Sexo)
prop.table(dados$Sexo)
table(dados$Sexo)
prop.table(table(dados$Sexo))
prop.table(table(dados$Sexo)) * 100
dist_freq_qualitativas <- cbind(freq = table(dados$Sexo), percent = prop.table(table(dados$Sexo)) * 100)
dist_freq_qualitativas
table(dados$Sexo)
table(dados$Sexo)
prop.table(table(dados$Sexo)) * 100
table(dados$Sexo)
prop.table(table(dados$Sexo)) * 100
dist_freq_qualitativas
colnames(dist_freq_qualitativas)
colnames(dist_freq_qualitativas) <-  c("Frequencia", "Porcentagem")
dist_freq_qualitativas
rownames(dist_freq_qualitativas)
rownames(dist_freq_qualitativas) <- c("Masculino", "Feminino")
dist_freq_qualitativas
library("glue")
source('C:/Projetos/github.com/datascience/alura/estatistica/exercicios1.R', encoding = 'UTF-8')
dados <- c(1, 2, 3, 1, 2, 2, 2, 3, 3, 2, 1, 3)
select(dados, c)
select(dados)
source('C:/Projetos/github.com/datascience/alura/estatistica/exercicios1.R', encoding = 'UTF-8')
table(dados)
prop.table(table(dados))
dist_frequencia <- cbind(freq = table(dados), dist = prop.table(table(dados)))
dist_frequencia
colnames(dist_frequencia)
colnames(dist_frequencia) <- c("Frequência", "Freq. Relativa")
dist_frequencia
rownames(dist_frequencia)
rownames(dist_frequencia) <- c("Estatistico", "Cientista", "Programador")
dist_frequencia
c("Indigina", "Branca", "Preta", "Amarela", "Parda")
c("Masculino", "Feminino")
frequencia <- table(dados$Sexo, dados$Cor)
frequencia
frequencia <- table(dados$Sexo, dados$Cor)
frequencia
frequencia <- table(dados$Sexo, dados$Cor)
dados
# Importando dados --------------------------------------------------------
dados <- read.csv("dados.csv")
frequencia <- table(dados$Sexo, dados$Cor)
frequencia
rownames(frequencia) <- c("Masculino", "Feminino")
frequencia
colnames($frequencia) <- c("Indigina", "Branca", "Preta", "Amarela", "Parda")
frequencia
colnames($frequencia) <- c("Indigina", "Branca", "Preta", "Amarela", "Parda")
colnames(frequencia) <- c("Indigina", "Branca", "Preta", "Amarela", "Parda")
frequencia
frequencia < cbind(frequencia)
frequencia
percentual <- prop.table(frequencia) * 100
percentual
list(c(1,2,3,4), c(5,6,7))
medias < tapply(dados$Renda, list(dados$Sexo, dados$Cor))
medias <- tapply(dados$Renda, list(dados$Sexo, dados$Cor))
medias
medias <- tapply(dados$Renda, list(dados$Sexo, dados$Cor), mean)
medias
rownames(medias) <- c("Masculino", "Feminino")
colnames(medias) <- c("Indigina", "Branca", "Preta", "Amarela", "Parda")
medias
classes <- c(0, 1576, 152, 7880, 15760, 200000)
labels <- c('E', 'D', 'C', 'B', 'A')
cut(x = dados$Renda,
breaks = classes,
labels = labels,
include.lowest = T)
frequencia <= table(
cut(x = dados$Renda,
breaks = classes,
labels = labels,
include.lowest = T)
)
frequencia <- table(
cut(x = dados$Renda,
breaks = classes,
labels = labels,
include.lowest = T)
)
frequencia
percentual <- prop.table(frequencia) * 100
percentual
dist_freq_quantitativas_personalizadas <-
cbin("Frequencia" = frequencia, 'Porcentagem  ' = percentual)
dist_freq_quantitativas_personalizadas <-
cbind("Frequencia" = frequencia, 'Porcentagem  ' = percentual)
dist_freq_quantitativas_personalizadas
dist_freq_quantitativas_personalizadas[order(row.names(dist_freq_quantitativas_personalizadas,))]
dist_freq_quantitativas_personalizadas[order(row.names(dist_freq_quantitativas_personalizadas)),]
source('C:/Projetos/github.com/datascience/alura/estatistica/exercicios1.R', encoding = 'UTF-8')
percentual <- prop.table(frequencia) * 100
dist_freq_altura <- cbind('Frequência' = frequencia, 'Porcentagem (%)' = percentual)
dist_freq_altura[
order(row.names(dist_freq_altura)),
]
# Regra de Sturges
n <- nrow(dados)
k <- 1 * (10 /3) * log10(n)
k
k <- round(k,0)
k
k <- 1 + (10 /3) * log10(n)
k <- round(k,0)
k
options(repr.plot.width=7)
options(repr.plot.width=7, repr.plot.width=4)
# Histograma
hist(dados$Altura)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
mean(dados)
mean(dados$Renda)
aggregate(dados$Renda, dados$Sexo, mean)
aggregate(dados$Renda, list(Sexo = dados$Sexo), mean)
aggregate(dados$Renda, list("Sexo" = dados$Sexo), mean)
aggregate(list("Renda" = dados$Renda), list("Sexo" = dados$Sexo), mean)
quantile(dados$Renda, c(0.25, 0.5, 0.75))
decis <- c()
for(i in 1:9) {
decis <= c(decis, i)
}
decis
decis <i c(decis, i)
for(i in 1:9) {
decis <i c(decis, i)
}
decis <- c()
for(i in 1:9) {
decis <i c(decis, i)
}
decis
decis <- c()
for(i in 1:9) {
decis <i c(decis, i/10)
}
decis
decis <- c(decis, i/10)
for(i in 1:9) {
decis <- c(decis, i/10)
}
decis
decis <- c()
for(i in 1:9) {
decis <- c(decis, i/10)
}
decis
quantile(dados$Renda, decis)
centis <- c()
for(i in 1:99) {
centis <- c(centis, i/100)
}
quantile(dados$Renda, centis)
dados$Renda
dados[dados$Renda<=788]
dados[dados$Renda <= 788]
dados[dados$Renda <= 788]
dados$Renda[dados$Renda <= 788]
length(dados$Renda[dados$Renda <= 788])
length(dados$Renda[dados$Renda <= 788]) / length(dados$Renda) * 100
length(dados$Renda[dados$Renda <= 788/2]) / length(dados$Renda) * 100
materias <- c('Matemática', 'Português', 'Inglês', 'Geografia', 'História', 'Física', 'Química')
Fulano <- c(8, 10, 4, 8, 6, 10, 8)
Sicrano <- c(7.5, 8, 7, 8, 8, 8.5, 7)
df <- data.frame(Fulano, Sicrano, row.names = materias)
df
summary(df)
materias <- c('Matemática', 'Português', 'Inglês', 'Geografia', 'História', 'Física', 'Química')
Fulano <- c(8, 10, 4, 8, 6, 10, 8)
Sicrano <- c(7.5, 8, 7, 8, 8, 8.5, 7)
df <- data.frame(Fulano, Sicrano, row.names = materias)
df
dataset <- data.frame(
Sexo = c('H', 'M', 'M', 'M', 'M', 'H', 'H', 'H', 'M', 'M'),
Idade = c(53, 72, 54, 27, 30, 40, 58, 32, 44, 51)
)
sd(dataset$Idade)
dataset <- data.frame(
Sexo = c('H', 'M', 'M', 'M', 'M', 'H', 'H', 'H', 'M', 'M'),
Idade = c(53, 72, 54, 27, 30, 40, 58, 32, 44, 51)
)
dataset
dataset[dataset$Sexo=~"M"]
dataset[dataset$Sexo="M"]
dataset$Idade[dataset$Sexo="M"]
dataset$Idade[dataset$Sexo=="M"]
sd(dataset$Idade[dataset$Sexo=="M"])
