2 + 2
R.version()
r.version()
R.version
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
source('C:/Projetos/github.com/datascience/fia/20210518/aula 20210518.R')
StartDate < as.Date("2020/2/28")
StartDate <- as.Date("2020/2/28")
StopDate < as.Date("2020/3/1")
StopDate <- as.Date("2020/3/1")
StopDate - StartDate
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
summary(cars)
teste <- c(1,2,3,4)
teste <- c(1,2,3,4)
teste
knitr::opts_chunk$set(echo = TRUE)
# inicialização -----------------------------------------------------------
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
#install.packages("readxl") #Instalação do pacote. Uma vez instalado, não é necessário instalá-lo novamente no computador
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
#install.packages("readxl") #Instalação do pacote. Uma vez instalado, não é necessário instalá-lo novamente no computador
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
rentabilidade <- read_excel("Regressão linear simples.xlsx",sheet="Rentabilidade" ) #Função que lê o arquivo xls e salva em uma base de dados R
# inicialização -----------------------------------------------------------
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
#install.packages("readxl") #Instalação do pacote. Uma vez instalado, não é necessário instalá-lo novamente no computador
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
rentabilidade <- read_excel("Regressão linear simples.xlsx",sheet="Rentabilidade" ) #Função que lê o arquivo xls e salva em uma base de dados R
rentabilidade
rentabilidade <- read_excel("Regressão linear simples.xlsx",sheet="Rentabilidade" ) #Função que lê o arquivo xls e salva em uma base de dados R
rentabilidade <- read_excel("doc/Regressão linear simples.xlsx",sheet="Rentabilidade" ) #Função que lê o arquivo xls e salva em uma base de dados R
rentabilidade
rentabilidade
View(rentabilidade)
summary(rentabilidade)
correlacao <- cor(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`)
rentabilidade
head(rentabilidade)
View(rentabilidade)
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Preço (Mil R$/m2)", xlab="Distância (km)", col='darkturquoise', xlim = c(0,3), ylim = c(0,20))
correlacao <- cor(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`)
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`)
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media")
View(rentabilidade)
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, 'Taxa de Desocupação' ~ 'Taxa de rentabilidade média'), col='blue')
lm(rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
abline(lm(data=rentabilidade, lm(rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`), col='blue')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, lm(rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`), col='blue')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Preço (Mil R$/m2)", xlab="Distância (km)", col='darkturquoise', xlim = c(0,3), ylim = c(0,20))
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, lm(rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`), col='blue')
lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
abline(lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`))
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`))
regressao <- lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação` ~ rentabilidade$`Taxa de rentabilidade média`)
regressao
summary(regressao)
y_estimado <- 29.1427 - 0.5572*x
x <- 15
y_estimado <- 29.1427 - 0.5572*x
format(round(y_estimado, 2), nsmall = 2)
plot(x=rentabilidade$`Taxa de Desocupação`, y-rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
regressao <- lm(data=rentabilidade, rentabilidade$`Taxa de rentabilidade média` ~ rentabilidade$`Taxa de Desocupação`)
summary(regressao)
knitr::opts_chunk$set(echo = TRUE)
# inicialização -----------------------------------------------------------
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, xlab="Taxa de Desocupação", ylab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, xlab="Taxa de Desocupação", ylab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, xlab="Taxa de Desocupação", ylab="Taxa de Rentabilidade Media", col='darkturquoise')
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, xlab="Taxa de Desocupação", ylab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, rentabilidade$`Taxa de rentabilidade média` ~ rentabilidade$`Taxa de Desocupação`),  col='blue')
knitr::opts_chunk$set(echo = TRUE)
# inicialização -----------------------------------------------------------
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
#install.packages("readxl") #Instalação do pacote. Uma vez instalado, não é necessário instalá-lo novamente no computador
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
rentabilidade <- read_excel("doc/Regressão linear simples.xlsx",sheet="Rentabilidade" ) #Função que lê o arquivo xls e salva em uma base de dados R
plot(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`, xlab="Taxa de Desocupação", ylab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, rentabilidade$`Taxa de rentabilidade média` ~ rentabilidade$`Taxa de Desocupação`),  col='blue')
plot(rentabilidade$`Taxa de rentabilidade média`, rentabilidade$`Taxa de Desocupação`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação`) ~  rentabilidade$`Taxa de rentabilidade média`,  col='blue')
correlacao <- cor( rentabilidade$`Taxa de rentabilidade média`, rentabilidade$`Taxa de Desocupação`,)
plot(rentabilidade$`Taxa de rentabilidade média`, rentabilidade$`Taxa de Desocupação`, ylab="Taxa de Desocupação", xlab="Taxa de Rentabilidade Media", col='darkturquoise')
abline(lm(data=rentabilidade, rentabilidade$`Taxa de Desocupação`) ~  rentabilidade$`Taxa de rentabilidade média`,  col='blue')
correlacao <- cor( rentabilidade$`Taxa de rentabilidade média`, rentabilidade$`Taxa de Desocupação`,)
unlink('C:/Projetos/github.com/datascience/fia/20210622/exercicio - Regressão Simples - Rentabilidade_cache', recursive = TRUE)
correlacao <- cor(rentabilidade$`Taxa de Desocupação`, rentabilidade$`Taxa de rentabilidade média`)
knitr::opts_chunk$set(echo = TRUE)
faturamento <- read_excel("doc/Regressão linear simples.xlsx",sheet="Faturamento" ) #Função que lê o arquivo xls e salva em uma base de dados R
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
faturamento <- read_excel("doc/Regressão linear simples.xlsx",sheet="Faturamento" ) #Função que lê o arquivo xls e salva em uma base de dados R
#Verificar variáveis
# names(imobiliario)
# summary(imobiliario)
faturamento
View(faturamento)
regressao <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao)
#Verificar variáveis
faturamento
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao)
options(scipen=999)
rm(list = ls())
options(scipen=999)
knitr::opts_chunk$set(echo = TRUE)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
```{r echo = F}
knitr::opts_chunk$set(echo = TRUE)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
```{r echo = F}
knitr::opts_chunk$set(echo = TRUE)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
```{r echo = F}
---
title: "Case - Faturamento e-commerce"
author: "Marcio Cruz"
date: "28/06/2021"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# inicialização -----------------------------------------------------------
```{r echo = FALSE}
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
options(scipen=999)
## Case
Uma empresa de e-commerce deseja projetar o faturamento de acordo com o investimento em anúncios na internet. Os dados são de uma pesquisa de empresas do mesmo segmento do e-commerce. O objetivo é entender a variação no faturamento bruto semanal pelo canal de internet, de acordo com o investimento realizado neste canal.
### Hipóteses para β1:
#### Ho: β1 = 0 (não existe relação linear entre as variáveis)
#### Ha: β1 # 0 (existe relação linear entre as variáveis)
### Hipóteses para β0:
#### Ho: β0 = 0 (Passa pela origem)
#### Ha: β0 # 0 (Não passa pela origem)
```{r echo = FALSE}
```{r echo = F}
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
faturamento <- read_excel("doc/Regressão linear simples.xlsx",sheet="Faturamento" ) #Função que lê o arquivo xls e salva em uma base de dados R
#Verificar variáveis
# faturamento
## Respostas:
### a) Obtenha o modelo de regressão linear simples. Com 90% de confiança, há relação linear entre as variáveis?
```{r}
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
options(scipen=999)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
regressao_1variavel <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ 0+ faturamento$`Anúncio na Internet`)
summary(regressao_1variavel)
summary(regressao_2variaveis)
summary(regressao_1variavel)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
correlacao <- cor(faturamento$`Anúncio na Internet`, faturamento$`Faturamento Bruto Semanal`)
correlacao2 <- cor(faturamento$`Faturamento Bruto Semanal`, faturamento$`Anúncio na Internet`)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
regressao_1variavel <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ 0+ faturamento$`Anúncio na Internet`)
summary(regressao_1variavel)
### d) Estime o valor do faturamento para uma empresa que investe R$12.000 na internet.
x <- 12000
y_estimado <- 4.295804 * x
### d) Estime o valor do faturamento para uma empresa que investe R$12.000 na internet.
x <- 12000
y_estimado <- 4.295804 * x
format(round(y_estimado, 2), nsmall = 2)
x <- 10000
y_estimado <- 4.295804 * x
x <- 12500
y_estimado <- 4.295804 * x
x <- 12000
y_estimado <- 4.295804 * x
x <- 12000
y_estimado <- 4.295804 * x
### d) Estime o valor do faturamento para uma empresa que investe R$12.000 na internet.
```{r echo = F}
x <- 12000
y_estimado <- 4.295804 * x
```
O valor estimado de faturamento é R$ `r format(round(y_estimado, 2), nsmall = 2)`
correlacao <- cor(faturamento$`Anúncio na Internet`, faturamento$`Faturamento Bruto Semanal`)
correlacao <- cor(faturamento$`Anúncio na Internet`, faturamento$`Faturamento Bruto Semanal`)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
regressao_1variavel <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ 0+ faturamento$`Anúncio na Internet`)
summary(regressao_1variavel)
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
faturamento <- read_excel("doc/Regressão linear simples.xlsx",sheet="Faturamento" ) #Função que lê o arquivo xls e salva em uma base de dados R
#Verificar variáveis
# faturamento
## Respostas:
### a) Obtenha o modelo de regressão linear simples. Com 90% de confiança, há relação linear entre as variáveis?
```{r echo = F}
correlacao <- cor(faturamento$`Anúncio na Internet`, faturamento$`Faturamento Bruto Semanal`)
## Respostas:
### a) Obtenha o modelo de regressão linear simples. Com 90% de confiança, há relação linear entre as variáveis?
```{r echo = T}
correlacao <- cor(faturamento$`Anúncio na Internet`, faturamento$`Faturamento Bruto Semanal`)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
# summary(regressao_2variaveis)
regressao_1variavel <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ 0+ faturamento$`Anúncio na Internet`)
# summary(regressao_1variavel)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
regressao_1variavel <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ 0+ faturamento$`Anúncio na Internet`)
regressao_2variaveis <- lm(data=faturamento, faturamento$`Faturamento Bruto Semanal` ~ faturamento$`Anúncio na Internet`)
summary(regressao_2variaveis)
summary(regressao_1variavel)
x <- 0
y_estimado <- 4.295804 * x
knitr::opts_chunk$set(echo = TRUE)
# inicialização -----------------------------------------------------------
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
salario <- read_excel("doc/Regressão linear simples.xlsx",sheet="Salario" ) #Função que lê o arquivo xls e salva em uma base de dados R #Verificar variáveis
# names(imobiliario)
# summary(imobiliario)
salario
# names(imobiliario)
# summary(imobiliario)
salario
View(salario)
plot(salario$`Nota Média`, salario$`Salario Mensal`, xlab = "Nota Média", ylab = "Salário Mensal", col='darkturquoise)
plot(salario$`Nota Média`, salario$`Salario Mensal`, xlab = "Nota Média", ylab = "Salário Mensal", col='darkturquoise')
plot(salario$`Nota Média`, salario$`Salario Mensal`, xlab = "Nota Média", ylab = "Salário Mensal", col='darkturquoise')
lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`)
abline(lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`), col='blue')
abline(lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`), col='blue')
plot(salario$`Nota Média`, salario$`Salario Mensal`, xlab = "Nota Média", ylab = "Salário Mensal", col='darkturquoise')
abline(lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`), col='blue')
plot(salario$`Nota Média`, salario$`Salario Mensal`, xlab = "Nota Média", ylab = "Salário Mensal", col='darkturquoise')
abline(lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`), col='blue')
correlacao <- cor(salario$`Nota Média`, salario$`Salario Mensal`)
regressao <- lm(data=salario, salario$`Salario Mensal` ~ salario$`Nota Média`)
summary(regressao)
unlink('C:/Projetos/github.com/datascience/fia/20210622/exercicio - Regressão Simples - Salario Candidato_cache', recursive = TRUE)
install.packages('rsconnect')
install.packages("rsconnect")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
rm(list = ls())
dados_lim_cred  <- read_excel("doc/Regressão linear múltipla.xlsx",sheet="Limite_Credito (1)" )
knitr::opts_chunk$set(echo = TRUE)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
dados_lim_cred  <- read_excel("doc/Regressão linear múltipla.xlsx",sheet="Limite_Credito (1)" )
View(dados_lim_cred)
library(GGally)
knit_with_parameters('C:/Projetos/github.com/datascience/fia/20210622/exercicio - Regressão Multipla - Limite Cheque Especial.Rmd', encoding = 'UTF-8')
knitr::opts_chunk$set(echo = TRUE)
wd <- Sys.getenv("RWD")
if (!file.exists(wd)) {
stop(paste("O diretorio definido na variavel de ambiente RWD nao foi encontrado",wd, sep="="))
}
setwd(wd)
getwd()
rm(list = ls())
options(scipen=999)
library(readxl) #Avisar o R que utilizará este pacote. Deve-se avisar toda vez que abrir o R
library(GGally)
dados_lim_cred  <- read_excel("doc/Regressão linear múltipla.xlsx",sheet="Limite_Credito (1)" )
## Respostas
### a) Faça o gráfico de dispersão entre as variáveis.
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
## Respostas
### a) Faça o gráfico de dispersão entre as variáveis.
```{r}
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
```
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
## Respostas
### a) Faça o gráfico de dispersão entre as variáveis.
```{r}
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
```
ggpairs(dados_lim_cred, title="correlogram with ggpairs()")
cor(dados_lim_cred$Idade, dados_lim_cred$LimitedoChequeEspecial)
ggpairs(dados_lim_cred, title="Correlograma")
cor(dados_lim_cred$LimitedoChequeEspecial, dados_lim_cred$Idade)
names(dados_lim_cred)
lm(data = dados_lim_cred, LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato))
lm(data = dados_lim_cred, LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
### b) Calcule o coeficiente de correlação entre as variáveis quantitativas. Interprete os coeficientes.
```{r}
names(dados_lim_cred)
```
lm(data = dados_lim_cred, LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
### b) Calcule o coeficiente de correlação entre as variáveis quantitativas. Interprete os coeficientes.
```{r}
names(dados_lim_cred)
```
lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
source('C:/Projetos/github.com/datascience/fia/20210622/aula regressao linear multipla.R', encoding = 'UTF-8', echo=TRUE)
### b) Calcule o coeficiente de correlação entre as variáveis quantitativas. Interprete os coeficientes.
```{r}
names(dados_lim_cred)
```
regressao1 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
### b) Calcule o coeficiente de correlação entre as variáveis quantitativas. Interprete os coeficientes.
```{r}
names(dados_lim_cred)
```
regressao1 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
summary(regressao1)
regressao1 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Idade + Salario + LimitedeCreditoImediato)
summary(regressao1)
regressao2 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Salario + LimitedeCreditoImediato)
summarY(regressao2)
regressao2 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Salario + LimitedeCreditoImediato)
summarY(regressao2)
summary(regressao2)
regressao3 <- lm(data = dados_lim_cred, formula = LimitedoChequeEspecial ~ Salario)
summary(regressao3)
